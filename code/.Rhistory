return(T)
} else {
message('Keep going...')
return(F)
}
}
birdCoord <- createGrid(openSpaceX = openSpaceX,
openSpaceY=openSpaceY,
birdCoord=birdCoord,
pigCoord=pigCoord)
height <- c(145, 167, 176, 123, 150)
weight <- c(51, 63, 64, 40, 55)
plot(height,weight)
createGrid(1:3,rep(1,3),c(1,1),c(3,1))
checkMove <- function(newCoord, openSpaceX, openSpaceY) {
if (!any(newCoord[2] %in% openSpaceY[newCoord[1] == openSpaceX])) {
warning('New coordinate is not free. Bird will not move.')
return(F)
}
if (any(newCoord > 8 | newCoord < 1)) {
warning('New coordinate is beyodn the grid. Bird cannot move.')
return(F)
}
return(T)
}
moveBird <- function(oldCoord,newCoord,pigCoord,openSpaceX,openSpaceY) {
if (!checkMove(newCoord,openSpaceX,openSpaceY)) {
return(oldCoord)
}
segments(x0=oldCoord[1], y0=oldCoord[2],
x1=newCoord[1], y1=newCoord[2],
col='red')
mazeSolved(newCoord,pigCoord)
return(newCoord)
}
moveLeft <- function(openSpaceX, openSpaceY, birdCoord, pigCoord) {
return(moveBird(oldCoord=birdCoord,
newCoord = c(birdCoord[1]-1,
birdCoord[2]),
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY))
}
moveRight <- function(openSpaceX, openSpaceY, birdCoord, pigCoord) {
return(moveBird(oldCoord=birdCoord,
newCoord = c(birdCoord[1]+1,
birdCoord[2]),
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY))
}
moveUp <- function(openSpaceX, openSpaceY, birdCoord, pigCoord) {
return(moveBird(oldCoord=birdCoord,
newCoord = c(birdCoord[1],
birdCoord[2]+1),
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY))
}
moveDown <- function(openSpaceX, openSpaceY, birdCoord, pigCoord) {
return(moveBird(oldCoord=birdCoord,
newCoord = c(birdCoord[1],
birdCoord[2]-1),
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY))
}
pigCoord <- c(3,4)
birdCoord <- c(3,6)
openSpaceX <- rep(3,3)
openSpaceY <- 4:6
birdCoord <- createGrid(openSpaceX = openSpaceX,
openSpaceY=openSpaceY,
birdCoord=birdCoord,
pigCoord=pigCoord)
pigCoord <- c(7,5)
birdCoord <- c(2,5)
openSpaceX <- 2:7
openSpaceY <- rep(5,6)
birdCoord <- createGrid(openSpaceX = openSpaceX,
openSpaceY=openSpaceY,
birdCoord=birdCoord,
pigCoord=pigCoord)
pigCoord <- c(7,5)
birdCoord <- c(2,5)
openSpaceX <- 2:7
openSpaceY <- rep(5,6)
birdCoord <- createGrid(openSpaceX = openSpaceX,
openSpaceY=openSpaceY,
birdCoord=birdCoord,
pigCoord=pigCoord)
birdCoord  <- moveRight(birdCoord = birdCoord,
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY)
for (i in 1:5) {
birdCoord  <- moveRight(birdCoord = birdCoord,
pigCoord = pigCoord,
openSpaceX = openSpaceX,
openSpaceY = openSpaceY)
{r}
data("iris")
data()
knitr::opts_chunk$set(echo = TRUE)
data("iris")
head(iris)
iris[iris$Species != "setosa"]
iris[iris$Species != "setosa",]
sim(iris[iris$Species != "setosa" & iris$Petal.Length>=5,])
dim(iris[iris$Species != "setosa" & iris$Petal.Length>=5,])
iris[iris$Species == "setosa", "Petal.Length"]
mean(iris[iris$Species == "setosa", "Petal.Length"])
plot(iris[iris$Species == "setosa", "Petal.Length"])
plot(iris[iris$Species == "setosa" ~ "Petal.Length"])
load("/Users/laurenpeiffer/Downloads/StringHandlingSampleData.Rda")
setwd("/Volumes/My Passport/Sequencing/it-workflow/code")
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("it-workflow/code") # git repository already cloned to desktop
analysisdir = "../analysis/P23-filtered-tax-class" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-species-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
head(A)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
head(meltA)
colnames(meltA) = c("Region", "SampleID", "Taxa", "Percent Abundance")
head(melt(A)
)
colnames(meltA) = c("Region", "SampleID", "Taxa", "Percent Abundance")
head(meltA)
# --------------------------------------------------------
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
View(meltA)
# --------------------------------------------------------
# load meta-data ---
metadatafile                = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-meta.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
head(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
meltAwmeta = cbind(meta[match(meltA$Taxa, meta[,"Taxa"]), ], meltA)
head(meltAwmeta)
View(mycolors)
# END color scheme for major sample metadata features of interest ---------
meltAwmeta = Awmeta[A$Result != "FP" & A$Result != "FN",]
# END color scheme for major sample metadata features of interest ---------
meltAwmeta = meltAwmeta[Result != "FP" & Result != "FN",]
# order the factor levels for visualization --
meltAwmeta$Taxa      = factor(meltAwmeta$Taxa)
meltAwmeta$Result     = factor(meltAwmeta$Result,   levels=c("TP","FN","FP"))
meltAwmeta$Region     = factor(meltAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9"))
meltAwmeta$SampleID    = factor(meltAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5"))
Awmeta = meltAwmeta$Result != "FP" & meltAwmeta$Result != "FN"
head(Awmeta)
str(Awmeta)
Awmeta = meltAwmeta[meltAwmeta$Result != "FP" & meltAwmeta$Result != "FN", ]
head(Awmeta)
# order the factor levels for visualization --
meltAwmeta$Taxa      = factor(meltAwmeta$Taxa)
meltAwmeta$Result     = factor(meltAwmeta$Result,   levels=c("TP","FN","FP"))
meltAwmeta$Region     = factor(meltAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9","Expected"))
meltAwmeta$SampleID    = factor(meltAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5","Expected"))
Awmeta = meltAwmeta[meltAwmeta$Result != "FP" & meltAwmeta$Result != "FN", ]
head(Awmeta)
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("it-workflow/code") # git repository already cloned to desktop
analysisdir = "../analysis/P23-filtered-tax-class" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-species-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
colnames(meltA) = c("Region", "SampleID", "Taxa", "Percent Abundance")
# --------------------------------------------------------
# load meta-data ---
metadatafile                = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-meta.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
meltAwmeta = cbind(meta[match(meltA$Taxa, meta[,"Taxa"]), ], meltA)
# order the factor levels for visualization --
meltAwmeta$Taxa      = factor(meltAwmeta$Taxa)
meltAwmeta$Result     = factor(meltAwmeta$Result,   levels=c("TP","FN","FP"))
meltAwmeta$Region     = factor(meltAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9","Expected"))
meltAwmeta$SampleID    = factor(meltAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5","Expected"))
Awmeta = meltAwmeta[meltAwmeta$Result != "FP" & meltAwmeta$Result != "FN", ]
head(Awmeta)
View(meltAwmeta)
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("it-workflow/code") # git repository already cloned to desktop
analysisdir = "../analysis/P23-filtered-tax-class" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-species-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
head(A)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
meltA[1:3,1:10]
head(meltA)
colnames(meltA) = c("Region", "SampleID", "Taxa", "Percent Abundance")
head(meltA)
# --------------------------------------------------------
# load meta-data ---
metadatafile                = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-meta.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
head(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
meltAwmeta = cbind(meta[match(meltA$Taxa, meta[,"Taxa"]), ], meltA)
head(meltAwmeta)
mergeAwmeta = merge(meltA,meta,by="Taxa")
head(mergeAwmeta)
mergeAwmeta[1:20,1:5]
View(mergeAwmeta)
# order the factor levels for visualization --
mergeAwmeta$Taxa      = factor(mergeAwmeta$Taxa)
mergeAwmeta$Result     = factor(mergeAwmeta$Result,   levels=c("TP","FN","FP"))
mergeAwmeta$Region     = factor(mergeAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9","Expected"))
mergeAwmeta$SampleID    = factor(mergeAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5","Expected"))
Awmeta = mergeAwmeta[mergeAwmeta$Result != "FP" & mergeAwmeta$Result != "FN", ]
head(Awmeta)
View(Awmeta)
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x=Region, y=Value)) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab("Measure Value") +
facet_wrap(~Measure, ncol=5, scales="free_y")
ggsave(outfile1, plot=p1)
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x="Region", y="Percent Abundance")) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab("Measure Value") +
facet_wrap(~Measure, ncol=5, scales="free_y")
ggsave(outfile1, plot=p1)
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x="Region", y="Percent Abundance")) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab(NULL) +
facet_wrap(~, ncol=5, scales="free_y")
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x="Region", y="Percent Abundance")) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab(NULL)
ggsave(outfile1, plot=p1)
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x="Region", y="Percent Abundance")) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab(NULL)
ggsave(outfile1, plot=p1)
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("it-workflow/code") # git repository already cloned to desktop
analysisdir = "../analysis/P23-filtered-tax-class" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-species-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
colnames(meltA) = c("Region", "SampleID", "Taxa", "Percent Abundance")
# --------------------------------------------------------
# load meta-data ---
metadatafile                = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-meta.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
mergeAwmeta = merge(meltA,meta,by="Taxa")
# order the factor levels for visualization --
mergeAwmeta$Taxa      = factor(mergeAwmeta$Taxa)
mergeAwmeta$Result     = factor(mergeAwmeta$Result,   levels=c("TP","FN","FP"))
mergeAwmeta$Region     = factor(mergeAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9","Expected"))
mergeAwmeta$SampleID    = factor(mergeAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5","Expected"))
Awmeta = mergeAwmeta[mergeAwmeta$Result != "FP" & mergeAwmeta$Result != "FN", ]
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["Expected"]  = "#FF9AA2"
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x="Region", y="Percent Abundance")) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab(NULL)
ggsave(outfile1, plot=p1)
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("it-workflow/code") # git repository already cloned to desktop
analysisdir = "../analysis/P23-filtered-tax-class" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-species-for-r.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
colnames(meltA) = c("Region", "SampleID", "Taxa", "PercentAbundance")
# --------------------------------------------------------
# load meta-data ---
metadatafile                = "../analysis/P07-filtered-sum-taxa-db4.0/filtered-taxa-meta.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
mergeAwmeta = merge(meltA,meta,by="Taxa")
# order the factor levels for visualization --
mergeAwmeta$Taxa      = factor(mergeAwmeta$Taxa)
mergeAwmeta$Result     = factor(mergeAwmeta$Result,   levels=c("TP","FN","FP"))
mergeAwmeta$Region     = factor(mergeAwmeta$Region,   levels=c("v2","v3","v4","v67","v8","v9","Expected"))
mergeAwmeta$SampleID    = factor(mergeAwmeta$SampleID,  levels=c("atcc1","atcc2","atcc3","atcc4","atcc5","Expected"))
Awmeta = mergeAwmeta[mergeAwmeta$Result != "FP" & mergeAwmeta$Result != "FN", ]
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["Expected"]  = "#FF9AA2"
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# --------------------------------------------------------
outfile1 = paste(pdfdir, "percent-taxa-per-region.pdf", sep="")
p1 <- ggplot(Awmeta, aes(x=Region, y=PercentAbundance)) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab(NULL)
ggsave(outfile1, plot=p1)
View(mergeAwmeta)
