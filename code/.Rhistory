Awmeta$first.timept = factor(Awmeta$first.timept, levels=c("pre.tx", "on.tx", "post.tx", "n/a"))
Awmeta$primary.tx   = factor(Awmeta$primary.tx, levels=c("RP", "RP+salvage.XRT", "RP+salvage.XRT+ADT",
"XRT", "XRT+neoadjuvant.ADT", "none", "n/a"))
Awmeta$weeks.on.enza = factor(Awmeta$weeks.on.enza, levels=c("0-29", "30-59", "60-89", "90-119", "120-149", "150-179", "n/a"))
# drop v8 and v9 ----
Awmeta = Awmeta[A$Region != "v8" & A$Region != "v9",]
# --------------------------------------------------------
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$responder["no"]  = "#efd07d"
mycolors$responder["yes"] = "#3974a6"
mycolors$treatment["pre.tx"]   = "#3da4ab"
mycolors$treatment["on.tx"]    = "#f6cd61"
mycolors$treatment["re.tx"]    = "#fe8a71"
mycolors$treatment["post.tx"]  = "#c8c8c8"
mycolors$first.timept["pre.tx"] = "#3da4ab"
mycolors$first.timept["on.tx"]  = "#f6cd61"
mycolors$first.timept["re.tx"]  = "#fe8a71"
mycolors$first.timept["n/a"]    = "#c8c8c8"
mycolors$weeks.on.enza["0-29"]    = "#7fdbda"
mycolors$weeks.on.enza["30-59"]   = "#ade498"
mycolors$weeks.on.enza["60-89"]   = "#ede682"
mycolors$weeks.on.enza["90-119"]  = "#febf63"
mycolors$weeks.on.enza["120-149"] = "#fe9a63"
mycolors$weeks.on.enza["150-179"] = "#fe636b"
mycolors$weeks.on.enza["n/a"]     = "#c8c8c8"
# END color scheme for major sample metadata features of interest ---------
# --------------------------------------------------------
# create array of features to assess ---
# colnames of Awmeta are too complicated at this point
# e.g. "k__Bacteria; p__Proteobacteria; c__Gammaproteobacteria; o__Pasteurellales;
# f__Pasteurellaceae; g__Avibacterium; s__Avibacterium_paragallinarum"
# we will remove semicolons, spaces and simplify the names before visualization
colnames(Awmeta)[23:ncol(Awmeta)] = gsub("k__Bacteria; ", "", colnames(Awmeta)[23:ncol(Awmeta)])
colnames(Awmeta)[23:ncol(Awmeta)] = gsub(";", ".", colnames(Awmeta)[23:ncol(Awmeta)])
colnames(Awmeta)[23:ncol(Awmeta)] = gsub(" ", "", colnames(Awmeta)[23:ncol(Awmeta)])
colnames(Awmeta)[23:ncol(Awmeta)] = gsub("__", ".", colnames(Awmeta)[23:ncol(Awmeta)])
# completed modifying colnames of taxa ---
taxaFeatures = colnames(Awmeta)[23:ncol(Awmeta)] # this is the list we will visualize
# BEGIN STATS CODE -------------------------------------------
# this will hold all stats results for Q1 / Q2
txStatsResults = c()
# ------------------------------------------------------------
regions = c("v2", "v3", "v4", "v67")
for (myFeature in taxaFeatures){
print(paste("Evaluating feature: ", txlevel, " ", myFeature, sep=""))
resultsRow = c(myFeature)
for (region in regions){
# Q1 | Responder vs Non-responder at pre.tx
# Q2 | To incorporate more responders into the data...
#      Lauren to create a new column first.timept
q2Res             = list()
q2Res["N.nr"]  = length(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="no", myFeature])
q2Res["N.r"]   = length(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="yes", myFeature])
q2Res["N.nr.pos"]  = sum(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="no", myFeature] > 0)
q2Res["N.r.pos"]   = sum(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="yes", myFeature]>0)
q2Res["Mean.nr"] = mean(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="no", myFeature])
q2Res["Mean.r"]   = mean(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="yes", myFeature])
q2Res["r.vs.nr.mw.pval"]  = wilcox.test(Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="no", myFeature],
Awmeta[Awmeta$Region==region &
Awmeta$first.timept=="pre.tx" &
Awmeta$responder=="yes", myFeature])$p.value
resultsRow     = c(resultsRow, unlist(q2Res))
} # end of regions
# total obs across both cohorts at timept 1
q2OverallNpos = sum(Awmeta[Awmeta$first.timept=="pre.tx", myFeature]>0)
# add pseudo count for visualization / stats analysis
Awmeta[,myFeature] = Awmeta[,myFeature] + 0.01
# add in consensus glm model for difference across regions ---
obsglm    <- glm(as.formula(paste("log10(", myFeature, ") ~ Region + responder", sep="")), data=Awmeta[Awmeta$first.timept=="pre.tx",],  family="gaussian")
obsglmCoef = tryCatch({summary(obsglm)$coefficients[5,1]}, error = function(e) {"n/a"})
obsglmPval = tryCatch({summary(obsglm)$coefficients[5,4]}, error = function(e) {"n/a"})
# append to resultsRow ---
resultsRow  = c(resultsRow, obsglmCoef, obsglmPval)
# append row to txStatsResults ---
txStatsResults = rbind(txStatsResults, resultsRow)
# END STATS CODE -------------------------------------------
if(is.nan(obsglmPval) | obsglmPval > 0.1){
next
}
if (q2OverallNpos < 5){
next
}
if (grepl("^ko|ec", txlevel)){
if(obsglmPval > 0.001){
next
}
}
# BEGIN VIS CODE -------------------------------------------
# ggplot2 ---
myTitle = paste(myFeature, "\n",
"GLM coef: ", sprintf("%3.3f", obsglmCoef), "\n",
"GLM pval: ", sprintf("%3.5f", obsglmPval), sep="")
if (grepl("alpha", txlevel) | grepl("^(ec|ko|pa)", txlevel)){
p1 <- ggplot(Awmeta[Awmeta$first.timept=="pre.tx", ], aes_string(x="responder", y=myFeature)) +
geom_boxplot(aes(color=responder),fill=NA, outlier.size=0, coef=1e100, alpha=0.9) +
geom_point(aes(color=responder), alpha=0.5, size=2, position=position_dodge(width=0.75)) +
theme_bw() +
scale_color_manual(values=mycolors$responder) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=8, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.1) +
xlab(NULL) + # no label for x axis
ylab("Alpha Diversity Estimator") +
ggtitle(myTitle) +
facet_wrap(~Region, scales="free_y", ncol=5)
ggsave(paste(pdfdir, myFeature, ".01.pdf", sep=""), plot=p1, width=9, height=4)
}else{
p1 <- ggplot(Awmeta[Awmeta$first.timept=="pre.tx", ], aes_string(x="responder", y=myFeature)) +
geom_boxplot(aes(color=responder),fill=NA, outlier.size=0, coef=1e100, alpha=0.9) +
geom_point(aes(color=responder), alpha=0.5, size=2, position=position_dodge(width=0.75)) +
theme_bw() +
scale_color_manual(values=mycolors$responder) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=8, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.1) +
xlab(NULL) + # no label for x axis
ylab("% Ab.") +
ggtitle(myTitle) +
scale_y_log10(breaks=c(0.01, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25, 50, 100)) +
facet_wrap(~Region, scales="free_y", ncol=5)
ggsave(paste(pdfdir, myFeature, ".01.pdf", sep=""), plot=p1, width=9, height=4)
p1 <- ggplot(Awmeta[Awmeta$first.timept=="pre.tx", ], aes_string(x="responder", y=myFeature)) +
geom_boxplot(aes(color=responder),fill=NA, outlier.size=0, coef=1e100, alpha=0.9) +
geom_point(aes(fill=responder, shape=first.timept), color="black", alpha=0.5, size=4, position=position_dodge(width=0.75)) +
theme_bw() +
scale_color_manual(values=mycolors$responder) +
scale_fill_manual(values=mycolors$responder) +
scale_shape_manual(values=c(21,24,22)) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=8, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.1) +
xlab(NULL) + # no label for x axis
ylab("% Ab.") +
ggtitle(myTitle) +
scale_y_log10(breaks=c(0.01, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25, 50, 100)) +
facet_wrap(~Region, scales="free_y", ncol=5) +
guides(fill = guide_legend(override.aes=list(shape=21)))
ggsave(paste(pdfdir, myFeature, ".02.pdf", sep=""), plot=p1, width=9, height=4)
}
# END VIS CODE -------------------------------------------
} # end of features loop
# finalize colnames for txStatsResults ---
txStatsResultsColNames = c("Feature")
q2Names    = c("N.nr",  "N.r", "N.nr.pos",  "N.r.pos", "Mean.nr",  "Mean.r",  "r.vs.nr.mw.pval")
for (region in regions){
for (q2n in q2Names){
txStatsResultsColNames = c(txStatsResultsColNames, paste(region, ".", q2n, sep=""))
}
}
txStatsResultsColNames   = c(txStatsResultsColNames, "glm.coef", "glm.pval")
colnames(txStatsResults) = txStatsResultsColNames
write.table(x=txStatsResults, file=paste(txdir,"/", txlevel, "-stats-results.csv", sep=""), col.names=TRUE, row.names=FALSE, sep=",")
} # end of files loop
setwd("/Volumes/My Passport/Sequencing/it-workflow/code")
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("") # git repository already cloned to desktop
analysisdir = "../analysis/P09-alpha-taxa-stats-vis" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
taxalevels = c("alpha",
"phylum",
"class",
"order",
"family",
"genus",
"species")
txlevel = taxalevels[2]
txlevel
# ---------------------------------------------------
# create output dirs ---
txdir = paste(analysisdir, "/", txlevel, sep="") #subdirectory in analysisdir
unlink(txdir, recursive=TRUE)
dir.create(txdir)
# ---------------------------------------------------
pdfdir = paste(txdir, "/pdfs/", sep="") #subdirectory in analysisdir
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = paste("../analysis/P07-sum-taxa-db4.0.pl/final/", txlevel, ".txt", sep="")
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
head(A)
# ---------------------------------------------------
# load meta-data ---
metadatafile                = "../data/atcc-metadata.txt"
meta                        = read.table(metadatafile, header=TRUE, sep="\t")
meta                        = data.frame(meta)
head(meta)
# ---------------------------------------------------
# match the meta data frame and meltA to get the needed variables for plotting
Awmeta = cbind(meta[match(A$SampleID, meta[,"sample.id"]), ], A)
head(Awmeta)
# clean up measure names --- take out words exported and vector ---
colnames(Awmeta) = gsub("exported-", "", colnames(Awmeta))
colnames(Awmeta) = gsub("-vector", "", colnames(Awmeta))
colnames(Awmeta) = gsub("-", ".", colnames(Awmeta))
# --------------------------------------------------------
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$chip["1"]  = "#3da4ab"
mycolors$chip["2"]  = "#f6cd61"
mycolors$chip["3"]  = "#fe8a71"
mycolors$barcode["11"]  = "#3da4ab"
mycolors$barcode["12"]  = "#f6cd61"
mycolors$barcode["53"]  = "#fe8a71"
mycolors$barcode["2"]   = "#c8c8c8"
# END color scheme for major sample metadata features of interest ---------
# --------------------------------------------------------
# create array of features to assess ---
# colnames of Awmeta are too complicated at this point
# e.g. "k__Bacteria; p__Proteobacteria; c__Gammaproteobacteria; o__Pasteurellales;
# f__Pasteurellaceae; g__Avibacterium; s__Avibacterium_paragallinarum"
# we will remove semicolons, spaces and simplify the names before visualization
colnames(Awmeta)[8:ncol(Awmeta)] = gsub("k__Bacteria; ", "", colnames(Awmeta)[8:ncol(Awmeta)])
colnames(Awmeta)[8:ncol(Awmeta)] = gsub(";", ".", colnames(Awmeta)[8:ncol(Awmeta)])
colnames(Awmeta)[8:ncol(Awmeta)] = gsub(" ", "", colnames(Awmeta)[8:ncol(Awmeta)])
colnames(Awmeta)[8:ncol(Awmeta)] = gsub("__", ".", colnames(Awmeta)[8:ncol(Awmeta)])
# completed modifying colnames of taxa ---
taxaFeatures = colnames(Awmeta)[8:ncol(Awmeta)] # this is the list we will visualize
head(taxaFeatures)
rm(list=ls()) #reset of all commands in system
library(RColorBrewer) #install these packages first
library(ggplot2)
library(grid)
library(reshape2)
# ---------------------------------------------------
# configure per user ---
#setwd("") # git repository already cloned to desktop
analysisdir = "../analysis/P09-alpha-vis" #create the analysis directory you want outputs to go into
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P08-sum-alpha/alpha-diversity-per-sample-region.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
meltA <- melt(A, id.vars=c("Region", "SampleID"))
colnames(meltA) = c("Region", "SampleID", "Measure", "Value")
# --------------------------------------------------------
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["v2"]  = "#FF9AA2"
mycolors$Region["v3"]  = "#FFDAC1"
mycolors$Region["v4"]  = "#FFF7C1"
mycolors$Region["v67"] = "#E2F0CB"
mycolors$Region["v8"]  = "#B5EAD7"
mycolors$Region["v9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# END color scheme for major sample metadata features of interest ---------
# --------------------------------------------------------
outfile1 = paste(pdfdir, "alpha-diversity-by-region.pdf", sep="")
p1 <- ggplot(meltA, aes(x=Region, y=Value)) +
geom_boxplot(mapping=aes(color=Region), alpha=1, outlier.size = NA, coef=1000) +
geom_point(aes(color=Region), alpha=1, size=2) +
theme_bw() +
scale_color_manual(values=mycolors$Region) +
theme(axis.text.x  = element_text(size=11, colour="black"),
axis.text.y  = element_text(size=11, colour="black"),
axis.title.x = element_text(size=12, colour="black"),
axis.title.y = element_text(size=12, colour="black"),
plot.title   = element_text(size=10, colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio=1.0) +
xlab(NULL) +
ylab("Measure Value") +
facet_wrap(~Measure, ncol=2, scales="free_y")
ggsave(outfile1, plot=p1)
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(grid)
library(MASS)
library("pheatmap")
# ---------------------------------------------------
# configure per user ---
# setwd("it-workflow/code")
analysisdir = "../analysis/P10-heatmap-species"
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0/final/species.txt"
A <- read.table(tablefile, sep="\t", header=FALSE, check.names=FALSE, as.is=TRUE)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0.pl/final/species.txt"
A <- read.table(tablefile, sep="\t", header=FALSE, check.names=FALSE, as.is=TRUE)
# ---------------------------------------------------
A = t(A)
A           = A[c(2,2,1,3:nrow(A)),]
A[2,]       = gsub(".V[0-9]+", "",A[2,])
colnames(A) = A[1,]
rownames(A) = A[,1]
A           = A[2:nrow(A),2:ncol(A)]
lastmdex    = 2
meta        = t(A[1:lastmdex,])
meta        = data.frame(meta)
A           = A[(lastmdex+1):nrow(A),]
A           = as.matrix(A)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
for (j in 1:nrow(A)){
if (length(rownames(A)[j]>95)){
rownames(A)[j] = paste("...",substrRight(rownames(A)[j],95), sep="")
}
}
vals = array(0, dim(A))
for (i in 1:nrow(A)){
for (j in 1:ncol(A)){
vals[i,j] = as.numeric(as.character(A[i,j]))
}
}
colnames(vals) = colnames(A)
rownames(vals) = rownames(A)
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["V2"]  = "#FF9AA2"
mycolors$Region["V3"]  = "#FFDAC1"
mycolors$Region["V4"]  = "#FFF7C1"
mycolors$Region["V67"] = "#E2F0CB"
mycolors$Region["V8"]  = "#B5EAD7"
mycolors$Region["V9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# color scheme for % values in the heatmap --------
colscheme <- c("gray92", "#2C3E50", "#2980B9", "#8E44AD", "#C0392B", "#D35400", "#F39C12", "#F1C40F", "#27AE60", "#196f3e")
CnormedCOLORS = colorRampPalette(colscheme[1:10])(20)[c(1,3:20)]
# adding a pseudocount to improve log-scale visualization
vals            = log10((vals/100)+0.0001)
# selecting samples with metadata
vals1           = vals[,rownames(meta)]
# adding a pseudocount to improve log-scale visualization
vals            = log10((vals/100)+0.0001)
head(meta)
head(A)
A[1:3,1:3]
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(grid)
library(MASS)
library("pheatmap")
# ---------------------------------------------------
# configure per user ---
# setwd("it-workflow/code")
analysisdir = "../analysis/P10-heatmap-species"
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0.pl/final/species.txt"
A <- read.table(tablefile, sep="\t", header=FALSE, check.names=FALSE, as.is=TRUE)
A[1:3,1:3]
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(grid)
library(MASS)
library("pheatmap")
# ---------------------------------------------------
# configure per user ---
# setwd("it-workflow/code")
analysisdir = "../analysis/P10-heatmap-species"
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0.pl/final/species.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
A[1,1:3]
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(grid)
library(MASS)
library("pheatmap")
# ---------------------------------------------------
# configure per user ---
# setwd("it-workflow/code")
analysisdir = "../analysis/P10-heatmap-species"
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0.pl/final/species.LP.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["V2"]  = "#FF9AA2"
mycolors$Region["V3"]  = "#FFDAC1"
mycolors$Region["V4"]  = "#FFF7C1"
mycolors$Region["V67"] = "#E2F0CB"
mycolors$Region["V8"]  = "#B5EAD7"
mycolors$Region["V9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# color scheme for % values in the heatmap --------
colscheme <- c("gray92", "#2C3E50", "#2980B9", "#8E44AD", "#C0392B", "#D35400", "#F39C12", "#F1C40F", "#27AE60", "#196f3e")
CnormedCOLORS = colorRampPalette(colscheme[1:10])(20)[c(1,3:20)]
pdf(file=paste(pdfdir, "ordered.pdf", sep=""), width=10, height=5)
pheatmap(cluster_rows=TRUE, show_rownames=TRUE, show_colnames=FALSE, cluster_cols=FALSE, annotation_col=meta, fontsize_row=4, fontsize = 6, annotation_colors=mycolors, scale="none", color=CnormedCOLORS, clustering_distance_rows="euclidean", clustering_distance_cols="euclidean")
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(grid)
library(MASS)
library("pheatmap")
# ---------------------------------------------------
# configure per user ---
# setwd("it-workflow/code")
analysisdir = "../analysis/P10-heatmap-species"
unlink(analysisdir, recursive=TRUE)
dir.create(analysisdir)
# ---------------------------------------------------
pdfdir = paste(analysisdir, "/pdfs/", sep="")
unlink(pdfdir, recursive=TRUE)
dir.create(pdfdir)
# ---------------------------------------------------
tablefile = "../analysis/P07-sum-taxa-db4.0.pl/final/species.LP.txt"
A <- read.table(tablefile, sep="\t", header=TRUE, check.names=FALSE, as.is=TRUE)
# BEGIN color scheme for major sample metadata features of interest ---------
mycolors = c()
mycolors$Region["V2"]  = "#FF9AA2"
mycolors$Region["V3"]  = "#FFDAC1"
mycolors$Region["V4"]  = "#FFF7C1"
mycolors$Region["V67"] = "#E2F0CB"
mycolors$Region["V8"]  = "#B5EAD7"
mycolors$Region["V9"]  = "#C7CEEA"
mycolors$SampleID["atcc1"] = "#F2978B"
mycolors$SampleID["atcc2"] = "#D954A0"
mycolors$SampleID["atcc3"] = "#6D5FA6"
mycolors$SampleID["atcc4"] = "#518FBF"
mycolors$SampleID["atcc5"] = "#63BBBF"
# color scheme for % values in the heatmap --------
colscheme <- c("gray92", "#2C3E50", "#2980B9", "#8E44AD", "#C0392B", "#D35400", "#F39C12", "#F1C40F", "#27AE60", "#196f3e")
CnormedCOLORS = colorRampPalette(colscheme[1:10])(20)[c(1,3:20)]
pdf(file=paste(pdfdir, "ordered.pdf", sep=""), width=10, height=5)
pheatmap(mat, cluster_rows=TRUE, show_rownames=TRUE, show_colnames=FALSE, cluster_cols=FALSE, annotation_col=meta, fontsize_row=4, fontsize = 6, annotation_colors=mycolors, scale="none", color=CnormedCOLORS, clustering_distance_rows="euclidean", clustering_distance_cols="euclidean")
pheatmap(SampleID, cluster_rows=TRUE, show_rownames=TRUE, show_colnames=FALSE, cluster_cols=FALSE, annotation_col=meta, fontsize_row=4, fontsize = 6, annotation_colors=mycolors, scale="none", color=CnormedCOLORS, clustering_distance_rows="euclidean", clustering_distance_cols="euclidean")
